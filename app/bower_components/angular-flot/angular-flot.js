// Generated by CoffeeScript 1.8.0
angular.module('angular-flot', []).directive('flot', function() {
  return {
    restrict: 'EA',
    template: '<div></div>',
    scope: {
      dataset: '=',
      options: '=',
      callback: '='
    },
    link: function(scope, element, attributes) {
	  // console.log("é«˜"+$(element[0]).css("width"));
	  // console.log(scope.$parent);
	  scope.height=$(element[0]).css("width");
	  scope.$watch('height',function(){init();});
      var height, init, onDatasetChanged, onOptionsChanged, plot, plotArea, width, _ref, _ref1;
      plot = null;
      width = attributes.width || '100%';
	  // console.log("attributes.width || 100%"+width);
      height = attributes.height || '100%';
      if (((_ref = scope.options) != null ? (_ref1 = _ref.legend) != null ? _ref1.container : void 0 : void 0) instanceof jQuery) {
        throw 'Please use a jQuery expression string with the "legend.container" option.';
      }
      if (!scope.dataset) {
        scope.dataset = [];
		// console.log("dataset is empty");
      }
      if (!scope.options) {
        scope.options = {
          legend: {
            show: false
          }
        };
      }
      plotArea = $(element.children()[0]);
	  plotArea1=plotArea.children();
	  // console.log("width:"+width);
      plotArea.css({
        width: width,
        height: height
      });
	  // console.log(plotArea1);
      init = function() {
        var plotObj;
        plotObj = $.plot(plotArea, scope.dataset, scope.options);
        if (scope.callback) {
          scope.callback(plotObj);
        }
        return plotObj;
      };
      onDatasetChanged = function(dataset) {
        if (plot) {
          plot.setData(dataset);
          plot.setupGrid();
          return plot.draw();
        } else  {
		  //alert("dataset:"+plotArea.css("width"));
          return plot = init();
        }
      };
      scope.$watch('dataset', onDatasetChanged, true);
      onOptionsChanged = function() {
		//alert("options"+plotArea.css("width"));
        return plot = init();
      };
	  scope.$watch(function () {
                return element.height();
            },onOptionsChanged
            );
	  scope.$on('gridster-resized', onOptionsChanged);
	  scope.$on('gridster-item-resized', onOptionsChanged);
	  scope.$on('gridster-item-transition-end', onOptionsChanged);
      scope.$watch('options', onOptionsChanged, true);
	  
    }
  };
});
